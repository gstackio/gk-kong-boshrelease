---
meta:
  name:    gk-kong
  release: Kong BOSH Release
  target:  gk-plat-devs
  url:     https://ci.gstack.io
  team:    gk-plat-devs

  test-errands: smoke-tests

  initial_version: "1.2.0"

  manifest:
    directory: deploy
    vars: |
      ---
      deployment_name: gk-kong-testflight
      network_name: default
    vars-pr: |
      ---
      deployment_name: gk-kong-testflight-pr
      network_name: default

    operator_file_paths-no-tls: "deploy/operators/disable-tls.yml"
    vars-no-tls: |
      ---
      deployment_name: gk-kong-testflight-no-tls
      network_name: default

    operator_file_paths-separate: "deploy/operators/separate-control-and-data-planes.yml"
    vars-separate: |
      ---
      deployment_name: gk-kong-testflight-separate
      network_name: default

  git:
    email:  ((git-commit-email))
    name:   ((git-commit-name))

  image:
    name: harbor.ci.gstack.io/gstack/gk-ops
    registry:
      username: ((docker-registry-username))
      password: ((docker-registry-password))

  aws:
    bucket:      (( grab meta.pipeline ))
    region_name: eu-west-3
    access_key:  ((aws-access-key))
    secret_key:  ((aws-secret-key))

  github:
    owner:  gstackio
    repo:   (( grab meta.pipeline ))
    branch: master
    private_key:  ((github-private-key))
    access_token: ((github-access-token))

  bosh:
    stemcell:
      cpi: warden-boshlite
    deployment-no-tls:   (( concat meta.name "-testflight-no-tls" ))
    deployment-separate: (( concat meta.name "-testflight-separate" ))

  slack:
    webhook:       ((slack-webhook))
    username:      ((slack-username))
    channel:       oss-pipelines-notifications



jobs:
  - name: testflight
    plan:
      - (( append ))

      - task: testflight-no-tls
        image: image
        config:
          platform: linux
          inputs:
            - { name: git }
          run:
            path: ./git/ci/scripts/testflight
            args: []
          params:
            REPO_ROOT:            git
            BOSH_ENVIRONMENT:     (( grab meta.bosh.target ))
            BOSH_CA_CERT:         (( grab meta.bosh.cacert ))
            BOSH_CLIENT:          (( grab meta.bosh.username ))
            BOSH_CLIENT_SECRET:   (( grab meta.bosh.password ))
            BOSH_DEPLOYMENT:      (( grab meta.bosh.deployment-no-tls ))
            TEST_ERRANDS:         (( grab meta.test-errands || meta.test-errand || ~ ))
            AWS_ACCESS_KEY:       (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:       (( grab meta.aws.secret_key ))
            MANIFEST_PATH:        (( grab meta.manifest.path ))
            MANIFEST_VARS:        (( grab meta.manifest.vars-no-tls ))
            MANIFEST_OP_PATHS:    (( grab meta.manifest.operator_file_paths-no-tls))

      - task: testflight-separate
        image: image
        config:
          platform: linux
          inputs:
            - { name: git }
          run:
            path: ./git/ci/scripts/testflight
            args: []
          params:
            REPO_ROOT:            git
            BOSH_ENVIRONMENT:     (( grab meta.bosh.target ))
            BOSH_CA_CERT:         (( grab meta.bosh.cacert ))
            BOSH_CLIENT:          (( grab meta.bosh.username ))
            BOSH_CLIENT_SECRET:   (( grab meta.bosh.password ))
            BOSH_DEPLOYMENT:      (( grab meta.bosh.deployment-separate ))
            TEST_ERRANDS:         (( grab meta.test-errands || meta.test-errand || ~ ))
            AWS_ACCESS_KEY:       (( grab meta.aws.access_key ))
            AWS_SECRET_KEY:       (( grab meta.aws.secret_key ))
            MANIFEST_PATH:        (( grab meta.manifest.path ))
            MANIFEST_VARS:        (( grab meta.manifest.vars-separate ))
            MANIFEST_OP_PATHS:    (( grab meta.manifest.operator_file_paths-separate))

resources:

  - name: git
    check_every: 24h
    webhook_token: ((concourse-webhook-token))

  - name: git-pull-requests
    check_every: 24h
    webhook_token: ((concourse-webhook-token))
