---
name: kong

description: |
  Kong Community Edition (CE) API Gateway.

templates:
  config/bpm.yml: config/bpm.yml
  bin/dns/healthy: bin/dns/healthy
  bin/bpm-prestart: bin/bpm-prestart
  bin/kong: bin/kong
  bin/post-start: bin/post-start
  bin/post-deploy: bin/post-deploy
  config/kong.conf: config/kong.conf
  tls/proxy.crt: tls/proxy.crt
  tls/proxy.key: tls/proxy.key
  tls/client.crt: tls/client.crt
  tls/client.key: tls/client.key
  tls/admin.crt: tls/admin.crt
  tls/admin.key: tls/admin.key
  tls/admin_ca.crt: tls/admin_ca.crt

packages:
  - kong
  - luarocks
  - openresty
  - openssl
  - jq-1.6-linux

consumes:
  - name: postgres
    type: database
    optional: true
  - name: kong-admin
    type: kong

provides:
  - name: kong
    type: kong
    properties:
      - proxy.bind_port
      - proxy.http_enabled
      - proxy.tls.enabled
      - proxy.tls.bind_port
      - proxy.tls.cert
      - admin.bind_port
      - admin.http_enabled
      - admin.tls.enabled
      - admin.tls.bind_port
      - admin.tls.cert
      - admin.basic_auth.username
      - admin.basic_auth.password
      - admin.service.route_hostname
      - admin.service.route_path
      - datastore.db_update_frequency_in_sec

properties:
  proxy.bind_ip:
    description: |
      IP address on which the API Gateway proxy should listen for web traffic
      (HTTP or HTTPS).
    default: "0.0.0.0"
  proxy.http_enabled:
    description: |
      Whether the API Gateway proxy should listen for unencrypted HTTP web
      traffic on the port defined with 'proxy.bind_port'.
    default: true
  proxy.bind_port:
    description: |
      Port on which the API Gateway proxy should listen for HTTP traffic.

      Only meaningful when 'proxy.http_enabled' is 'true'.
    default: 8000

  proxy.tls.enabled:
    description: |
      Determines if the API Gateway proxy should be listening for HTTPS
      traffic.
    default: true
  proxy.tls.http2_enabled:
    description: |
      Determines if the API Gateway proxy should accept HTTP/2 connections
      when serving HTTPS traffic.
    default: true
  proxy.tls.bind_port:
    description: |
      Port on which the API Gateway proxy should listen for HTTPS traffic.
    default: 8443
  proxy.tls.cert:
    type: certificate
    description: |
      The TLS certificate and private key to use for the Kong API Gateway
      proxy.

  proxy.client.tls.enabled:
    description: |
      Determines if the Kong API Gateway proxy should send client-side TLS
      certificates when proxying requests.
    default: false
  proxy.client.tls.cert:
    type: certificate
    description: |
      The TLS certificate and private key to use for the Kong API Gateway
      proxy to send client-side TLS certificate when proxying requests.

  proxy.injected_headers:
    description: |
      Determines the headers that Kong should inject in client responses. When
      set to an empty list, then Kong will not inject any headers. (Though
      this does not prevent plugins from injecting headers of their own.)

      Accepted values are:

      - `Server`: Injects `Server: kong/x.y.z` on Kong-produced response (e.g.
        Admin API, rejected requests from auth plugin, etc...).

      - `Via`: Injects `Via: kong/x.y.z` for successfully proxied requests.

      - `X-Kong-Proxy-Latency`: Time taken (in milliseconds) by Kong to
        process a request and run all plugins before proxying the request
        upstream.

      - `X-Kong-Upstream-Latency`: Time taken (in milliseconds) by the
        upstream service to send response headers.

      - `X-Kong-Upstream-Status`: The HTTP status code returned by the
        upstream service. This is particularly useful for clients to
        distinguish upstream statuses if the response is rewritten by a
        plugin.

      - `server_tokens`: Same as specifying both `Server` and `Via`.

      - `latency_tokens`: Same as specifying both `X-Kong-Proxy-Latency` and
        `X-Kong-Upstream-Latency`.
    default: [ server_tokens, latency_tokens ]



  admin.bind_ip:
    description: |
      IP address on which the Kong admin API should listen for web traffic
      (HTTP or HTTPS).
    default: "127.0.0.1"
  admin.http_enabled:
    description: |
      Whether the Kong admin API should listen for unencrypted HTTP web
      traffic on the port defined with 'admin.bind_port'.
    default: true
  admin.bind_port:
    description: |
      Port on which the Kong admin API should listen for HTTP traffic.

      Only meaningful when 'admin.http_enabled' is 'true'.
    default: 8001

  admin.tls.enabled:
    description: |
      Determines if the Kong admin API should be listening for HTTPS traffic.
    default: true
  admin.tls.http2_enabled:
    description: |
      Determines if the Kong admin API should accept HTTP/2 connections when
      serving HTTPS traffic.
    default: true
  admin.tls.bind_port:
    description: |
      Port on which the Kong admin API should listen for HTTPS traffic.
    default: 8444
  admin.tls.cert:
    type: certificate
    description: |
      The TLS certificate and private key to use for the Kong admin API.

  admin.basic_auth.username:
    description: |
      The username of the consumer that will be granted access to the Kong
      admin API through basic authentication.

      This username MUST NOT contain any colon ':', otherwise smoke tests will
      not pass.
    default: admin
  admin.basic_auth.password:
    description: |
      The password of the consumer that will be granted access to the Kong
      admin API through basic authentication.
  admin.basic_auth.consumer_uuid:
    description: |
      The UUID used for the Consumer that will hold the basic authentication
      to the Kong admin API.

      The default is usually fine for most implementations. Customizing is
      made possible for the very rare cases where teh default UUID would
      conflict with a pre-existing record in the Kong database. Whenever
      customized, this UUID must stay the same for the rest of the Kong
      cluster lifecycle.
    default: 305d4706-c467-47ef-b83b-f778ba1ad4ef
  admin.basic_auth.plugin_uuid:
    description: |
      The UUID used for the BAsic-Auth Plugin that will implement the basic
      authentication to the Kong admin API.

      The default is usually fine for most implementations. Customizing is
      made possible for the very rare cases where teh default UUID would
      conflict with a pre-existing record in the Kong database. Whenever
      customized, this UUID must stay the same for the rest of the Kong
      cluster lifecycle.
    default: 4819743a-f069-40fc-a802-6162db4a758e

  admin.service.route_hostname:
    description: |
      The fully qualified DNS hostname of the Service that will expose the
      Kong admin API.

      When left unspecified or set to the 'null' value, the admin API will be
      exposed on the default BOSH DNS address of the instance group targeted
      by the 'kong-amin' BOSH link.
    default: null
  admin.service.route_path:
    description: |
      The name of the Service that will expose the Kong admin API.
    default: /admin-api

  admin.service.uuid:
    description: |
      The UUID used for the Service that will expose the Kong admin API.

      The default is usually fine for most implementations. Customizing is
      made possible for the very rare cases where teh default UUID would
      conflict with a pre-existing record in the Kong database. Whenever
      customized, this UUID must stay the same for the rest of the Kong
      cluster lifecycle.
    default: 28edcf4e-ee08-4808-8ab9-c2219fa2a6df
  admin.service.route_uuid:
    description: |
      The UUID used for the Route that will expose the Kong admin API.

      The default is usually fine for most implementations. Customizing is
      made possible for the very rare cases where teh default UUID would
      conflict with a pre-existing record in the Kong database. Whenever
      customized, this UUID must stay the same for the rest of the Kong
      cluster lifecycle.
    default: 3afc5416-c09a-47b7-9065-1a0e1400465f



  # tls.protocols:
  #   description: |
  #     Space separated list of protocols to support.
  #     Not yet implemented.
  #   example: "TLSv1.2"
  tls.ciphers:
    description: |
      OpenSSL formatted list of ciphers to support. This applies to both proxy
      and admin TLS endpoints.

      When this property is not set, then the 'modern' cipher suite is used.

      See also: https://docs.konghq.com/0.14.x/configuration/#ssl_cipher_suite
    example: |
      ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256



  client_body_buffer_size:
    description: |
      Defines the buffer size for reading the request body.

      If the client request body is larger than this value, the body will be
      buffered to disk. When the body is buffered to disk Kong plugins that
      access or manipulate the request body may not work.

      It is advisable to set this value as high as possible. But high-
      concurrency environments will require significant memory allocations to
      process many concurrent large request bodies, though.

      See also: https://docs.konghq.com/0.14.x/configuration/#client_body_buffer_size
    default: 8k

  trusted_ips:
    description: |
      A list of CIDR blocks that defines trusted IP address blocks that are
      known to send correct 'X-Forwarded-*' headers.

      Requests from trusted IPs make Kong forward their 'X-Forwarded-*'
      headers upstream. Non-trusted requests make Kong insert its own
      'X-Forwarded-*' headers.

      See also: https://docs.konghq.com/0.14.x/configuration/#trusted_ips
    default: []
    example: [ "0.0.0.0/0", "::/0" ]

  datastore.db_update_frequency_in_sec:
    description: |
      This value determines the frequency at which your Kong nodes will be
      polling the database for invalidation events.

      A lower value will mean that the polling job will be executed more
      frequently, but that your Kong nodes will keep up with changes you
      apply. A higher value will mean that your Kong nodes will spend less
      time running the polling jobs, and will focus on proxying your
      traffic.

      See: https://docs.konghq.com/0.14.x/clustering/#1-db_update_frequency-default-5s
    default: 5

  extra_plugins:
    description: |
      Extra plugins to be loaded by Kong. The 'bundled' plugins are always
      loaded.

      See: https://docs.konghq.com/0.14.x/configuration/#plugins
    default: []

  extra_plugin_packages:
    description: |
      Extra BOSH packages to consider for loading LUA plugins.

      For each extra package, the '/var/vcap/packages/{package}/share/lua/5.1'
      directory will be added to the LUA path and taken into account when
      loading LUA plugins.

      See: https://docs.konghq.com/0.14.x/configuration/#lua_package_path
    default: []
