prefix = /var/vcap/data/kong

log_level = debug
proxy_access_log = /var/vcap/sys/log/kong/proxy_access.log
proxy_error_log = /var/vcap/sys/log/kong/proxy_error.log
admin_access_log = /var/vcap/sys/log/kong/admin_access.log
admin_error_log = /var/vcap/sys/log/kong/admin_error.log

plugins = bundled
anonymous_reports = off



proxy_listen = <%= p("proxy.bind_ip") %>:<%= p("proxy.bind_port") %>, <%= p("proxy.bind_ip") %>:<%= p("proxy.tls.bind_port") %> ssl
admin_listen = <%= p("admin.bind_ip") %>:<%= p("admin.bind_port") %>, <%= p("admin.bind_ip") %>:<%= p("admin.tls.bind_port") %> ssl

nginx_user = vcap vcap
nginx_daemon = off
mem_cache_size = 128m

ssl_cipher_suite = <%= p("tls.ciphers", nil) ? "custom" : "modern" %>
<% if_p("tls.ciphers") do |ciphers| -%>
ssl_ciphers = <%= ciphers %>
<% end -%>

ssl = <%= p("proxy.tls.enabled") ? "on" : "off" %>
ssl_cert = /var/vcap/jobs/kong/tls/proxy.crt
ssl_cert_key = /var/vcap/jobs/kong/tls/proxy.key
http2 = on

client_ssl = <%= p("proxy.client.tls.enabled") ? "on" : "off" %>
client_ssl_cert = /var/vcap/jobs/kong/tls/client.crt
client_ssl_cert_key = /var/vcap/jobs/kong/tls/client.key

admin_ssl = <%= p("admin.tls.enabled") ? "on" : "off" %>
admin_ssl_cert = /var/vcap/jobs/kong/tls/admin.crt
admin_ssl_cert_key = /var/vcap/jobs/kong/tls/admin.key
admin_http2 = on

upstream_keepalive = 60
headers = server_tokens, latency_tokens

<% if_p("trusted_ips") do |trusted_ips| -%>
trusted_ips = <%= trusted_ips.join(",") %>
<% end -%>

client_max_body_size = 0
client_body_buffer_size = <%= p("client_body_buffer_size") %>

error_default_type = text/plain



<% if_link("postgres") do |postgres| -%>
database = postgres
pg_host = <%= postgres.instances.first.address %>
pg_port = <%= postgres.p("databases.port") %>
<%
  db = postgres.p("databases.databases").find { |db| db["tag"] == "kong-db-tag" }
  db_role = postgres.p("databases.roles").find { |role| role["tag"] == "kong-db-tag" }
-%>
pg_user = <%= db_role["name"] %>
pg_password = <%= db_role["password"] %>
pg_database = <%= db["name"] %>

# pg_ssl = off
# pg_ssl_verify = on
# lua_ssl_trusted_certificate =
# lua_ssl_verify_depth = 1

db_update_propagation = 0
<% end -%>

db_update_frequency = 5
